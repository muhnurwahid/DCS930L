/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dcs_930l.view;

import dcs_930l.entity.Ipcam;
import dcs_930l.model.M_Ipcam;
import java.sql.Timestamp;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Dhan
 */
public class IpcamView extends javax.swing.JDialog {

    TableRowSorter<TableModel> sorter;
    DefaultTableModel model;
    M_Ipcam m_Ipcam;

    public IpcamView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Ipcam");
        m_Ipcam = new M_Ipcam();       
        refresh();
    }

    private void refresh() {
        model = m_Ipcam.readToTable("ipcam", "ipcam_id");
        tableIpcam.setModel(model);
        model.fireTableDataChanged();
        sorter = new TableRowSorter<TableModel>(model);
        tableIpcam.setRowSorter(sorter);
        tableIpcam.repaint();

        txtIpcamID.setText("");
        txtIpcamName.setText("");
        txtIpcamURL.setText("");
        txtIpcamPORTLISTENING.setText("");
        txtUSERNAME.setText("");
        txtPASSWORD.setText("");

        txtIpcamID.setEnabled(false);
        txtIpcamName.setEnabled(false);
        txtIpcamURL.setEnabled(false);
        txtIpcamPORTLISTENING.setEnabled(false);
        txtUSERNAME.setEnabled(false);
        txtPASSWORD.setEnabled(false);

        btnTambah.setVisible(true);
        btnSimpan.setVisible(false);
        btnUpdate.setVisible(false);
        btnHapus.setVisible(false);
        btnTambah.setText("Tambah");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtIpcamID = new javax.swing.JTextField();
        txtIpcamName = new javax.swing.JTextField();
        txtIpcamURL = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        txtCari = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableIpcam = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtIpcamPORTLISTENING = new javax.swing.JTextField();
        txtUSERNAME = new javax.swing.JTextField();
        txtPASSWORD = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("IPCAM ID : ");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("IPCAM NAME : ");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("IPCAM URL : ");

        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCariKeyReleased(evt);
            }
        });

        jLabel4.setText("Cari : ");

        tableIpcam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableIpcam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableIpcamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableIpcam);

        jLabel5.setText("IPCAM PORT LISTENING : ");

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("USERNAME : ");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("PASSWORD : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1029, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnTambah)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSimpan)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnUpdate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnHapus))
                                    .addComponent(txtIpcamID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIpcamName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIpcamPORTLISTENING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUSERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPASSWORD, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIpcamURL, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIpcamID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIpcamName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtIpcamURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtIpcamPORTLISTENING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtUSERNAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPASSWORD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah)
                    .addComponent(btnSimpan)
                    .addComponent(btnUpdate)
                    .addComponent(btnHapus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        if (btnTambah.getText().equals("Tambah")) {
            txtIpcamName.setEnabled(true);
            txtIpcamURL.setEnabled(true);
            txtIpcamPORTLISTENING.setEnabled(true);
            txtUSERNAME.setEnabled(true);
            txtPASSWORD.setEnabled(true);
            btnTambah.setText("Batal");
            btnSimpan.setVisible(true);
            txtIpcamID.setText(m_Ipcam.generate_id("ipcam", "ipcam_id", "CAM"));
        } else {
            btnTambah.setText("Tambah");
            refresh();
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        String ipcam_name = txtIpcamName.getText();
        String ipcam_url = txtIpcamURL.getText();
        String port = txtIpcamPORTLISTENING.getText();
        String username = txtUSERNAME.getText();
        String password = txtPASSWORD.getText();
        if (ipcam_name.equals("") && ipcam_url.equals("") && username.equals("")) {
            JOptionPane.showMessageDialog(this, "Data Harus Di Lengkapi");
        } else {
            try {
                Ipcam ipcam = new Ipcam();
                ipcam.setIpcam_id(txtIpcamID.getText());
                ipcam.setIpcam_name(ipcam_name);
                ipcam.setIpcam_url(ipcam_url);
                ipcam.setIpcam_port_listening(Integer.parseInt(port));
                ipcam.setIpcam_status("Stopped");
                ipcam.setUsername(username);
                ipcam.setPassword(password);
                ipcam.setCreated_at(new Timestamp(new Date().getTime()));
                if (m_Ipcam.insert(ipcam)) {
                    JOptionPane.showMessageDialog(this, "Data Berhasil Di Tambahkan!!!");
                } else {
                    JOptionPane.showMessageDialog(this, "Data Gagal Di Tambahkan!!!");
                }
                refresh();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Port harus berupa angka > 1");
            }
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String ipcam_name = txtIpcamName.getText();
        String ipcam_url = txtIpcamURL.getText();
        String port = txtIpcamPORTLISTENING.getText();
        String username = txtUSERNAME.getText();
        String password = txtPASSWORD.getText();
        if (ipcam_name.equals("") && ipcam_url.equals("") && username.equals("")) {
            JOptionPane.showMessageDialog(this, "Data Harus Di Lengkapi");
        } else {
            try {
                Ipcam ipcam = new Ipcam();
                ipcam.setIpcam_id(txtIpcamID.getText());
                ipcam.setIpcam_name(ipcam_name);
                ipcam.setIpcam_url(ipcam_url);
                ipcam.setIpcam_port_listening(Integer.parseInt(port));
                ipcam.setIpcam_status("Stopped");
                ipcam.setUsername(username);
                ipcam.setPassword(password);
                ipcam.setUpdated_at(new Timestamp(new Date().getTime()));
                if (m_Ipcam.update(ipcam)) {
                    JOptionPane.showMessageDialog(this, "Data Berhasil Di Update!!!");
                } else {
                    JOptionPane.showMessageDialog(this, "Data Gagal Di Update!!!");
                }
                refresh();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Port harus berupa angka > 1");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this, "Anda Yakin?", "Hapus Data", JOptionPane.YES_NO_OPTION);
        if (result == 0) {
            if (m_Ipcam.delete("ipcam", "ipcam_id", txtIpcamID.getText())) {
                JOptionPane.showMessageDialog(this, "Data Berhasil Di Hapus!!!");
            } else {
                JOptionPane.showMessageDialog(this, "Data Gagal Di Hapus!!!");
            }
            refresh();
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyReleased
        // TODO add your handling code here:
        String text = txtCari.getText();
        sorter.setRowFilter(RowFilter.regexFilter(text));
    }//GEN-LAST:event_txtCariKeyReleased

    private void tableIpcamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableIpcamMouseClicked
        // TODO add your handling code here:        
        btnTambah.setText("Batal");
        int selected = tableIpcam.getSelectedRow();
        if (selected >= 0) {

            try {
                txtIpcamName.setEnabled(true);
                txtIpcamURL.setEnabled(true);
                txtIpcamPORTLISTENING.setEnabled(true);
                txtUSERNAME.setEnabled(true);
                txtPASSWORD.setEnabled(true);
                
                btnUpdate.setVisible(true);
                btnHapus.setVisible(true);
                
                txtIpcamID.setText(model.getValueAt(selected, 0).toString());
                txtIpcamName.setText(model.getValueAt(selected, 1).toString());
                txtIpcamURL.setText(model.getValueAt(selected, 2).toString());
                txtIpcamPORTLISTENING.setText(model.getValueAt(selected, 3).toString());
                txtUSERNAME.setText(model.getValueAt(selected, 5).toString());
                txtPASSWORD.setText(model.getValueAt(selected, 6).toString());
            } catch (NullPointerException e) {

            }
        }
    }//GEN-LAST:event_tableIpcamMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tableIpcam;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtIpcamID;
    private javax.swing.JTextField txtIpcamName;
    private javax.swing.JTextField txtIpcamPORTLISTENING;
    private javax.swing.JTextField txtIpcamURL;
    private javax.swing.JTextField txtPASSWORD;
    private javax.swing.JTextField txtUSERNAME;
    // End of variables declaration//GEN-END:variables
}
